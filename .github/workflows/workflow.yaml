on:
  push:
    branches:
      - master

jobs:

  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout master
      uses: actions/checkout@master

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test with pytest
      run: |
        pip install pytest
        pip install pytest-cov
        pytest src/tests.py --doctest-modules --cov=src --cov-report=xml --cov-report=html

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Update SHA
      run: echo $GITHUB_SHA > $GITHUB_WORKSPACE/site/_meta

    - name: Build container image
      run: docker build -t justinrmiller/github-actions-test:$(echo $GITHUB_SHA | head -c7) .

    - name: Docker Login
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - name: Push image to Docker Hub
      run: docker push justinrmiller/github-actions-test

    - name: Update deployment file
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|justinrmiller/github-actions-test:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml

    - name: Save DigitalOcean kubeconfig
      uses: digitalocean/action-doctl@master
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      with:
        args: kubernetes cluster kubeconfig show ${{ secrets.KUBERNETES_CLUSTER }} > $GITHUB_WORKSPACE/.kubeconfig

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/config/deployment.yml

    - name: Verify deployment
      run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig rollout status deployment/github-actions-test
